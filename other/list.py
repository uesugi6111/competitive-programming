# 1次元配列の初期化
l=[0]*3

# 1次元配列に要素を追加
l=[1,3]
l.append(4) # [1,3,4]　末尾に要素の追加
l.insert(1,2) # [1,2,3,4]　insert(追加位置,値)　指定した位置に要素を追加

# 1次元配列の要素を削除
l=[1,3,2,4]
l.pop() # [1,3,2]　末尾の要素を削除
l.pop(1) # [1,2]　pop(位置)　指定した位置の要素を削除

# 1次元配列のソート
l=[1,4,2,3]
print(sorted(l)) # [1,2,3,4]　昇順にソート
print(sorted(l,reverse=True)) # [4,3,2,1]　降順にソート

# 1次元配列を逆順に並び替え
l=[1,4,2,3]
print(l[::-1]) # [3,2,4,1]

# 1次元配列のアンパック
l=[1,2,3]
print(*l) # 1 2 3　配列の中身を空白区切りで出力

# 1次元配列→文字列変換
l=["1","2","3"]
print("".join(l)) # "123"　配列を文字列に変換(配列の中身が文字列の場合のみ使用可能)

# 1次元配列のコピー
from copy import deepcopy
a=[1,2,3]
b=deepcopy(a) # b=aは×


# 2次元配列の初期化
l=[[0]*3 for i in range(5)] # [[0]*3]*5は×

# 2次元配列のソート
l=[[2,1,3],[1,3,2],[3,2,1]]
print(sorted(l)) # [[1,3,2],[2,1,3],[3,2,1]]　0番目のkeyで2次元配列を昇順にソート
print(sorted(l,key=lambda x:x[1])) # [[2,1,3],[3,2,1],[1,3,2]]　1番目のkeyで2次元配列を昇順にソート
print(sorted(l,key=lambda x:x[2])) # [[3,2,1],[1,3,2],[2,1,3]]　2番目のkeyで2次元配列を昇順にソート
print(sorted(l,reverse=True)) # [[3,2,1],[2,1,3],[1,3,2]]　0番目のkeyで2次元配列を降順にソート
print(sorted(l,key=lambda x:x[1],reverse=True)) # [[1,3,2],[3,2,1],[2,1,3]]　1番目のkeyで2次元配列を降順にソート
print(sorted(l,key=lambda x:x[2],reverse=True)) # [[2,1,3],[1,3,2],[3,2,1]]　2番目のkeyで2次元配列を降順にソート

# 2次元配列のコピー
from copy import deepcopy
a=[[1,2,3],[4,5,6]]
b=deepcopy(a) # b=aは×